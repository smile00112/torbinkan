<modification>
  <id>Связанные опции</id>
	<version>1.67</version>
	<vqmver>2.X</vqmver>
	<author>opencart@19th19th.ru</author>
  
	<file name="/catalog/controller/product/product.php">
    
    <operation>
			<search position="before"><![CDATA[$this->data['text_select'] = $this->language->get('text_select');]]></search>
			<add><![CDATA[
      // opencart@19th19th.ru <<
			$this->load->model('module/related_options');
			$this->data['ro_array'] 									= $this->model_module_related_options->get_options_array($this->request->get['product_id']);
			$this->data['variant_product_options'] 		= $this->model_module_related_options->get_variant_product_options($this->request->get['product_id']);
			$this->data['text_ro_clear_options'] 			= $this->language->get('text_ro_clear_options');
			$this->data['entry_stock_control_error']  = $this->language->get('entry_stock_control_error');
			$this->data['ro_prices'] 									= $this->model_module_related_options->get_ro_prices($this->request->get['product_id']);
			$this->data['ro_default'] 								= $this->model_module_related_options->get_default_ro_set($this->request->get['product_id']);
			
			// >> opencart@19th19th.ru]]>
      </add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[$this->language->load('product/product');]]></search>
			<add><![CDATA[
      // opencart@19th19th.ru << for 1.5.6
			$this->language->load('module/related_options');
			// >> opencart@19th19th.ru]]>
      </add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[$this->load->language('product/product');]]></search>
			<add><![CDATA[
      // opencart@19th19th.ru << for 1.5.4.1
			$this->load->language('module/related_options');
			// >> opencart@19th19th.ru]]>
      </add>
		</operation>
		
	</file>
	
  <file name="/admin/controller/catalog/product.php">
    
    <operation error="skip">
			<search position="before"><![CDATA[$this->language->load('catalog/product');]]></search>
			<add><![CDATA[
      // opencart@19th19th.ru << for 1.5.6
			$this->language->load('module/related_options');
			// >> opencart@19th19th.ru]]>
      </add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[$this->load->language('catalog/product');]]></search>
			<add><![CDATA[
      // opencart@19th19th.ru << for 1.5.4.1
			$this->load->language('module/related_options');
			// >> opencart@19th19th.ru]]>
      </add>
		</operation>
    
    <operation>
			<search position="before"><![CDATA[$this->data['heading_title'] = $this->language->get('heading_title');]]></search>
			<add><![CDATA[
      // opencart@19th19th.ru <<
			$this->data['related_options_title']      			= $this->language->get('related_options');
      $this->data['warning_equal_options']      			= $this->language->get('warning_equal_options');
      $this->data['entry_options_values']       			= $this->language->get('entry_options_values');
      $this->data['entry_add_related_options']  			= $this->language->get('entry_add_related_options');
			$this->data['entry_related_options_quantity']  	= $this->language->get('entry_related_options_quantity');
			$this->data['entry_ro_variant']  								= $this->language->get('entry_ro_variant');
			$this->data['text_ro_clear_options']  					= $this->language->get('text_ro_clear_options');
			$this->data['text_ro_all_options'] 							= $this->language->get('text_ro_all_options');
			$this->data['entry_ro_use'] 										= $this->language->get('entry_ro_use');
			$this->data['entry_add_discount'] 							= $this->language->get('entry_add_discount');
			$this->data['entry_del_discount_title'] 				= $this->language->get('entry_del_discount_title');
			$this->data['entry_prices'] 										= $this->language->get('entry_prices');
			$this->data['entry_select_first_short'] 				= $this->language->get('entry_select_first_short');
			$this->data['entry_select_first_priority'] 			= $this->language->get('entry_select_first_priority');
			
			
			$this->load->model('module/related_options');
      $this->data['related_options_installed'] = $this->model_module_related_options->installed();
			$this->data['variants_options'] = $this->model_module_related_options->get_variants_options();
			$this->data['related_options_settings'] = $this->config->get('related_options');
			$this->data['text_ro_support']                = $this->language->get('text_ro_support');
			$this->data['entry_ro_version']               = $this->language->get('entry_ro_version');
			$ro_settings = $this->config->get('related_options');
			$this->data['ro_version']               = isset($ro_settings['related_options_version'])? $ro_settings['related_options_version'] : "";
			
			// >> opencart@19th19th.ru]]>
      </add>
		</operation>
    
		<operation>
			<search position="after"><![CDATA[function validateForm() {]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<
			
			
			
			if (isset($this->request->post['relatedoptions'])) {
				$ro = $this->request->post['relatedoptions'];
				
				if (is_array($ro)) {
				
					$ro_keys = array_keys($ro);
				
					// не должно быть наборов опций не соответствующих выбранному варианту
					// лишние опции - не страшно, недостающие - плохо
					
					$this->load->model('module/related_options');
					$voptions = $this->model_module_related_options->get_options_for_variant($this->request->post['related_options_variant']);
					
					$enough_options = true;
					for ($i=0;$i<count($ro_keys);$i++) {
						$key_i = $ro_keys[$i];
						
						foreach ($voptions as $option_id) {
							if (!isset($ro[$key_i]['options'][$option_id])) {
								$enough_options = false;
							}
						}
						
					}
					
					if (!$enough_options) {
						$this->error['warning'] = $this->language->get('error_not_enough_options');
					}
			
			
					// не должно быть совпадающих наборов опций
				
					if ($enough_options) {
						$have_equal = false;
						for ($i=0;$i<count($ro_keys);$i++) {
							$key_i = $ro_keys[$i];
							
							for ($j=0;$j<count($ro_keys);$j++) {
								$key_j = $ro_keys[$j];
								if ($j!=$i) {
									
									$all_equal = true;
									foreach ($ro[$key_i]['options'] as $option_id => $option_value_id) {
										if (in_array($option_id, $voptions)) {
											$all_equal = ($all_equal && ($ro[$key_j]['options'][$option_id] == $option_value_id));
										}
									}
									
									$have_equal = ($have_equal || $all_equal);
									
								}
								
							}
							
						}
						
						if ($have_equal) {
							//$this->load->language('module/related_options');
							$this->error['warning'] = $this->language->get('error_equal_options');
							//$this->load->language('catalog/product');
						}
					}	
					
				}
				
			}
			
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
	
		<operation>
			<search position="before"><![CDATA[if (isset($this->request->post['product_description'])) {]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<
			
			$this->load->model('module/related_options');
			if ( isset($product_info['product_id']) ) {
				$this->data['rop_array'] = $this->model_module_related_options->get_related_options($product_info['product_id']);
			} elseif (isset($this->request->post['relatedoptions'])) {
				$this->data['rop_array'] = $this->request->post['relatedoptions'];
				
			}
			$this->data['variants_options'] = $this->model_module_related_options->get_variants_options(TRUE);
			$this->data['all_options'] = $this->model_module_related_options->get_compatible_options_values();
			
			if (isset($this->request->post['related_options_variant'])) {
				$this->data['related_options_variant'] = $this->request->post['related_options_variant'];
			} elseif (isset($product_info['product_id'])) {
				$this->data['related_options_variant'] = $this->model_module_related_options->get_product_variant($product_info['product_id']);
			} else {
				$this->data['related_options_variant'] = 0;
			}
			
			if (isset($this->request->post['related_options_use'])) {
				$this->data['related_options_use'] = $this->request->post['related_options_use'];
			} elseif (isset($product_info['product_id'])) {
				$this->data['related_options_use'] = $this->model_module_related_options->get_product_related_options_use($product_info['product_id']);
			} else {
				$this->data['related_options_use'] = 0;
			}
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
	</file>
  
  
  <file name="/admin/model/catalog/product.php">
		<operation>
      <search position="before"><![CDATA[$this->cache->delete('product');]]></search>
			<add><![CDATA[
			// opencart@19th19th.ru <<
			
			$this->load->model('module/related_options');
      $this->model_module_related_options->editRelatedOptions($product_id, ((isset($data))?($data):(0)) );
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
		<operation>
      <search position="before"><![CDATA[$this->addProduct($data);]]></search>
			<add><![CDATA[
			// opencart@19th19th.ru <<
			
			$this->load->model('module/related_options');
			$data['relatedoptions'] = $this->model_module_related_options->get_related_options($product_id);
			$data['related_options_variant'] = $this->model_module_related_options->get_product_variant($product_id);
			$data['related_options_use'] = $this->model_module_related_options->get_product_related_options_use($product_id);
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
		<!-- в разных версиях по-разному проверено ocs 1.5.4.1 -->
		<operation error="skip">
      <search position="replace"><![CDATA[$sql .= " AND LCASE(p.model) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_model'])) . "%'";]]></search>
			<add><![CDATA[
			// opencart@19th19th.ru <<
			
			$sql .= " AND (LCASE(p.model) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_model'])) . "%'
								OR p.product_id IN ( SELECT product_id FROM ".DB_PREFIX."relatedoptions WHERE  LCASE(model) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_model'])) . "%' ) )";
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
		<!-- в разных версиях по-разному проверено ocs 1.5.5.1.1 -->
		<operation error="skip">
      <search position="replace"><![CDATA[$sql .= " AND LCASE(p.model) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_model'])) . "%'";]]></search>
			<add><![CDATA[
			// opencart@19th19th.ru <<
			
			$sql .= " AND (LCASE(p.model) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_model'])) . "%'
								OR p.product_id IN ( SELECT product_id FROM ".DB_PREFIX."relatedoptions WHERE  LCASE(model) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_model'])) . "%' ) )";
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
		<!-- в разных версиях по-разному, проверено oc 1.5.6.3 -->
		<operation error="skip">
      <search position="replace"><![CDATA[$sql .= " AND p.model LIKE '" . $this->db->escape($data['filter_model']) . "%'";]]></search>
			<add><![CDATA[
			// opencart@19th19th.ru <<
			
			$sql .= " AND (p.model LIKE '" . $this->db->escape($data['filter_model']) . "%'
								OR p.product_id IN ( SELECT product_id FROM ".DB_PREFIX."relatedoptions WHERE model LIKE '" . $this->db->escape($data['filter_model']) . "%' ) )";
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
	</file>
  
  
  <file name="/admin/view/template/catalog/product_form.tpl">
    <operation>
      <search position="before"><![CDATA[<?php echo $footer; ?>]]></search>
      <!--<search position="before"><![CDATA[<script type="text/javascript" src="view/javascript/ckeditor/ckeditor.js"></script> ]]></search>-->
			<add><![CDATA[
      
      <!-- opencart@19th19th.ru << -->
<script type="text/javascript"><!--

var ro_counter = 0;
var ro_discount_counter = 0;
var ro_variants = [];
var ro_variants_options_order = [];
var all_options = [];

ro_variants[0] = [];
ro_variants_options_order[0] = [];
<?php
  if ( isset($variants_options) ) {
		foreach ($variants_options as $vo_id => $ro_votps) {
			echo "ro_variants[".$vo_id."]=[];\n";
			echo "ro_variants_options_order[".$vo_id."]=[];\n";
			
			foreach ($ro_votps['options_order'] as $option_id) {
				echo "ro_variants_options_order[".$vo_id."].push(".$option_id.");\n";
			}
			
			foreach ($ro_votps['options'] as $option_id => $option_name) {
				echo "ro_variants[".$vo_id."][".$option_id."] = \"".$option_name."\";\n";
			}
			
			
		}
	}
	
	if (isset($all_options)) {
		foreach ($all_options as $option_id => $option_data) {
			echo "all_options[".$option_id."] = [];\n";
			
			if (!isset($variants_options)) {
				echo "ro_variants[0][".$option_id."] = \"".$option_data['name']."\";\n";
				echo "ro_variants_options_order[0].push(".$option_id.");";
			}
			
			foreach ($option_data['values'] as $option_value_id => $option_value_name) {
				echo "all_options[".$option_id."][".$option_value_id."] = \"".$option_value_name."\";\n";
				
			}
		}
	}
	
?>


function refresh_ro_status() {
  
	var vopts = ro_variants[ $('[name=related_options_variant]')[0].value ];
	
  for (i=0;i<ro_counter;i++) {
    if ($('#ro_status'+i).length) {
      $('#ro_status'+i).html('');
      
      for (j=0;j<ro_counter;j++) {
        if (j != i && $('#ro_status'+j).length) {
          
          //$('#ro_status'+i).html('');
          
          all_equal = true;
          
					for (var option_id = 0, length_vopts = vopts.length; option_id < length_vopts; option_id++) {
						if (option_id in vopts && $('#ro_o_'+i+'_'+option_id).length != 0) {
            
							all_equal = all_equal && $('#ro_o_'+i+'_'+option_id).length!=0 && $('#ro_o_'+j+'_'+option_id).length!=0 && ( $('#ro_o_'+i+'_'+option_id)[0].value == $('#ro_o_'+j+'_'+option_id)[0].value );
							
						}	
            
          }
          
          if (all_equal) {
            $('#ro_status'+i).html('<?php echo $warning_equal_options; ?>');
          }
          
        }
      }
      
    }
  }
}

function add_related_option(params) {
  
  var str_add = "";
	var vopts = ro_variants[ $('[name=related_options_variant]')[0].value ];
	var vopts_order = ro_variants_options_order[ $('[name=related_options_variant]')[0].value ];
	var spec_model = <?php echo (isset($related_options_settings['spec_model']) && $related_options_settings['spec_model'] )?("true"):"false" ?>;
	var spec_price = <?php echo (isset($related_options_settings['spec_price']) && $related_options_settings['spec_price'] )?("true"):"false" ?>;
	var spec_price_discount = <?php echo (isset($related_options_settings['spec_price_discount']) && $related_options_settings['spec_price_discount'] )?("true"):"false" ?>;
	var entry_add_discount = "<?php echo $entry_add_discount; ?>";
	var entry_del_discount_title = "<?php echo $entry_del_discount_title; ?>";
	var select_first = <?php echo (isset($related_options_settings['select_first']) && $related_options_settings['select_first'] )?("true"):"false" ?>;
	
	
	str_add += "<tr id=\"related-option"+ro_counter+"\"><td>";
	
	str_add +="<div id='ro_status"+ro_counter+"' style='color: red'></div>";
	str_add +="<table>";
	
	for (var i = 0; i < vopts_order.length; i++) {
		option_id = vopts_order[i];
		str_add += "<tr>";
		str_add += "<td style='border:0px;'><b>"+vopts[option_id]+"</b>:</td>";
		str_add += "<td style='border:0px;'><select id='ro_o_"+ro_counter+"_"+option_id+"' name='relatedoptions["+ro_counter+"][options]["+option_id+"]' onChange='refresh_ro_status()'>";
		str_add += "<option value=0></option>";
		
		for (var option_value_id = 0, length_ao = all_options[option_id].length; option_value_id < length_ao; option_value_id++) {
			if (option_value_id in all_options[option_id]) {
				str_add += "<option value='"+option_value_id+"'";
				if (params[option_id] == option_value_id) str_add +=" selected ";
				str_add += ">"+all_options[option_id][option_value_id]+"</option>";
			}
		}
		
		str_add += "</select></td></tr>";
			
	}
	
	str_add +="</table>";

  
  str_add += "</td><td>";
  str_add += "<input type='text' name='relatedoptions["+ro_counter+"][quantity]' size='2' value='"+(params['quantity']||0)+"'>";
  str_add += "<input type='hidden' name='relatedoptions["+ro_counter+"][relatedoptions_id]' value='"+(params['relatedoptions_id']||"")+"'>";
  str_add += "</td><td>";
	
	if (spec_model)	{
		str_add += "<input type='text' name='relatedoptions["+ro_counter+"][model]' value=\""+(params['model']||'')+"\">";
		str_add += "</td><td>";
	} else {
		str_add += "<input type='hidden' name='relatedoptions["+ro_counter+"][model]' value=\""+(params['model']||'')+"\">";
	}
	
	if (spec_price)	{
		str_add += "<input type='text' name='relatedoptions["+ro_counter+"][price]' value='"+(params['price']||'')+"' size='10'>";
		str_add += "</td><td>";
	} else {
		str_add += "<input type='hidden' name='relatedoptions["+ro_counter+"][price]' value='"+(params['price']||'')+"'>";
	}
	
	
	if (spec_price && spec_price_discount)	{
		
	} else {
		str_add += "<div style='display:none;'>";
	}
	str_add += "<nobr><a onclick=\"add_related_option_discount("+ro_counter+", '');\">"+entry_add_discount+"</a></nobr><br>";
	str_add += "<table id='ro_price_discount"+ro_counter+"'>";
	str_add += "</table>";
	if (spec_price && spec_price_discount)	{
		str_add += "</td><td>";	
	} else {
		str_add += "</div>";
	}
	
	if (select_first) {
		str_add += "<input id='defaultselect_"+ro_counter+"' type='checkbox' onchange='check_defaultselectpriority();' name='relatedoptions["+ro_counter+"][defaultselect]' "+((params && params['defaultselect'])?("checked"):(""))+" value='1'>";
		str_add += "&nbsp;&nbsp;&nbsp;<input id='defaultselectpriority_"+ro_counter+"' type='text' title='<?php echo $entry_select_first_priority; ?>' name='relatedoptions["+ro_counter+"][defaultselectpriority]' style='width:20px;' value=\""+((params && params['defaultselectpriority'])?(params['defaultselectpriority']):(""))+"\" >";
		str_add += "</td><td>";	
	}

	
  str_add += "<a onclick='$(\"#related-option" + ro_counter + "\").remove();refresh_ro_status();' class='button'><?php echo $button_remove; ?></a>";
  str_add += "</td></tr>";
  
  $('#tbody-related_options').append(str_add);
	
	if (params && params['discounts'] && params['discounts'].length) {
		for (var i_dscnt=0; i_dscnt<params['discounts'].length; i_dscnt++) {
			
			add_related_option_discount(ro_counter, params['discounts'][i_dscnt]);
			
		}
	}
	
  
  ro_counter++;
  
  refresh_ro_status();
  
}

//проверяет доступность полей приоритета для выбора сочетаний опций по-умолчанию
function check_defaultselectpriority() {
	var dsc = $('input[type=checkbox][id^=defaultselect_]');
	var dsp;
	for (var i=0;i<dsc.length;i++) {
		dsp = $('#defaultselectpriority_'+dsc[i].id.substr(14));
		if (dsp && dsp.length) {
			if (dsc[i].checked) {
				dsp[0].style.display = '';
				if (isNaN(dsp[0].value)) {
					dsp[0].value = 0;
				}
				if (parseInt(dsp[0].value)==0) {
					dsp[0].value = "1";
				}
			} else {
				dsp[0].style.display = 'none';
			}
		}
	}
}

function add_related_option_discount(ro_counter, discount) {
	
	var first_name = "relatedoptions["+ro_counter+"][discounts]["+ro_discount_counter+"]";
	var customer_group_id = (discount=="")?(0):(discount['customer_group_id']);
	
	str_add = "";
	str_add += "<tr id='related-option-discount"+ro_discount_counter+"'><td style='border:0px;'>";
	
	
	
	str_add += "<select name='"+first_name+"[customer_group_id]' title='<?php echo str_replace($entry_customer_group, '"', "'"); ?>'>";
	<?php foreach ($customer_groups as $customer_group) { ?>
	str_add += "<option value='<?php echo $customer_group['customer_group_id']; ?>' "+((customer_group_id==<?php echo $customer_group['customer_group_id']; ?>)?("selected"):(""))+"><?php echo $customer_group['name']; ?></option>";
	<?php } ?>
	str_add += "</select>";
	str_add += "</td><td style='border:0px;'>";
	
	str_add += "<input type='text' size='2' name='"+first_name+"[quantity]' value='"+((discount=="")?(""):(discount['quantity']))+"' title='<?php echo str_replace($entry_quantity, '"', "'"); ?>'>";
	str_add += "</td><td style='border:0px;'>";
	
	str_add += "<input type='text' size='2' name='"+first_name+"[priority]' value='"+((discount=="")?(""):(discount['priority']))+"' title='<?php echo str_replace($entry_priority, '"', "'"); ?>'>";
	str_add += "</td><td style='border:0px;'>";
	
	str_add += "<input type='text' size='10' name='"+first_name+"[price]' value='"+((discount=="")?(""):(discount['price']))+"' title='<?php echo str_replace($entry_price, '"', "'"); ?>'>";
	str_add += "</td><td style='border:0px;'>";
	
	str_add += "<a onclick='$(\"#related-option-discount" + ro_discount_counter + "\").remove();' title='<?php echo $button_remove; ?>'>XX</a>";
	str_add += "</td><td style='border:0px;'>";
	
	str_add += "</td></tr>";
	
	$('#ro_price_discount'+ro_counter).append(str_add);
	
	ro_discount_counter++;
	
}



function related_options_use_check() {

	$("#related-options-use")[0].hidden = !$("#related_options_use")[0].checked;
	
}

<?php
  if ( isset($rop_array) ) {
    foreach ($rop_array as $rop) {
      
      echo "rop = {};\n";
			//echo "rop['discount']=[];\n";
      echo "rop['quantity']=".(int)$rop['quantity'].";\n";
			echo "rop['model']=\"".(string)$rop['model']."\";\n";
			echo "rop['price']=".(float)$rop['price'].";\n";
			echo "rop['defaultselect']=". (isset($rop['defaultselect'])?(int)$rop['defaultselect']:"0").";\n";
			echo "rop['defaultselectpriority']=".(isset($rop['defaultselectpriority'])?(int)$rop['defaultselectpriority']:"0").";\n";
			
      echo "rop['relatedoptions_id']=".(int)$rop['relatedoptions_id'].";\n";
			echo "rop['discounts']=[];";
			if (isset($rop['options'])) {
				foreach ($rop['options'] as $option_id => $option_value_id) {
					echo "rop[".$option_id."]=".$option_value_id.";\n";
				}
			}
			if (isset($rop['discounts'])) {
				$discount_cnt = 0;
				foreach($rop['discounts'] as $rop_discount) {
					echo "rop['discounts'][".$discount_cnt."] = {};\n";
					echo "rop['discounts'][".$discount_cnt."]['customer_group_id'] 	= '".$rop_discount['customer_group_id']."';\n";
					echo "rop['discounts'][".$discount_cnt."]['quantity'] 					= '".$rop_discount['quantity']."';\n";
					echo "rop['discounts'][".$discount_cnt."]['priority'] 					= '".$rop_discount['priority']."';\n";
					echo "rop['discounts'][".$discount_cnt."]['price'] 							= '".(float)$rop_discount['price']."';\n";
					$discount_cnt++;
				}
			}
      echo "add_related_option(rop);\n";
    }
  }
?>
related_options_use_check();
refresh_ro_status();
check_defaultselectpriority();

//--></script>
<!-- >> opencart@19th19th.ru -->
      
      ]]>
      </add>
		</operation>
    
    <operation>
      <search position="replace"><![CDATA[<?php echo $tab_design; ?></a>]]></search>
      <!--<search position="iafter"><![CDATA[<?php echo $tab_design; ?></a>]]></search> -->
			<add><![CDATA[<?php echo $tab_design; ?></a>
        <!-- opencart@19th19th.ru << -->
				<?php if ($related_options_installed) { ?>
        <a href="#tab-related_options"><?php echo $related_options_title ?></a>
				<?php } ?>
        <!-- >> opencart@19th19th.ru -->
      
      ]]></add>
		</operation>
    
     <operation>
      <search position="before"><![CDATA[<div id="tab-discount">]]></search>
			<add><![CDATA[
      
        <!-- opencart@19th19th.ru << -->
				<?php if ($related_options_installed) { ?>
		<div id="tab-related_options">
			
			<?php	
				
					$vopts = $variants_options;
					
					echo "<input type='checkbox' name='related_options_use' id='related_options_use' onchange='related_options_use_check()' value='1' ".(($related_options_use)?("checked"):(""))."><label for='related_options_use'>".$entry_ro_use."</label><br><br>";
					
					echo "<div id='related-options-use'>";
					
					echo "".$entry_ro_variant.": <select name='related_options_variant' >";
					echo "<option value='0'>".$text_ro_all_options."</option>";
					$ro_settings = $this->config->get('related_options');
					if (isset($ro_settings['use_variants'])	&& $ro_settings['use_variants']) {
						foreach ($vopts as $vo_id => $vo_arr) {
							if ($vo_id != 0) {
								echo "<option value='".$vo_id."' ".(($vo_id==$related_options_variant)?("selected"):("")).">".$vo_arr['name']."</option>";
							}
						}
					}
					echo "</select><br><br>";
					
					if (isset($related_options_settings['spec_price']) && $related_options_settings['spec_price'] && isset($related_options_settings['spec_price_discount']) && $related_options_settings['spec_price_discount']) {
						echo "<input type='hidden' name='related_options_discount' value='1'>";
					}
					
				
			?>
		
		  <table class="list" style="width:600px">
			
      
			
			<thead>
			  <tr>
				<td class="left" >
				  <?php echo $entry_options_values; ?>
				</td>
				<td class="left" width="90">
				  <?php echo $entry_related_options_quantity; ?>:
				</td>
			
				<?php
					if (isset($related_options_settings['spec_model']) && $related_options_settings['spec_model'] ) {
				?>	
						<td class="left" width="90">
							<?php echo $entry_model; ?>
						</td>
				<?php
					}
				?>
				<?php
					if (isset($related_options_settings['spec_price']) && $related_options_settings['spec_price'] ) {
				?>	
						<td class="left" width="90" >
							<?php echo $entry_price; ?>
						</td>
					
					
					<?php
						if (isset($related_options_settings['spec_price_discount']) && $related_options_settings['spec_price_discount'] ) {
					?>
						<td class="left" style="90">
							<?php echo $tab_discount; ?>:
						</td>
			
				<?php
						}
					}
				?>
				
				<?php
					if (isset($related_options_settings['select_first']) && $related_options_settings['select_first'] ) {
				?>	
						<td class="left" width="90" style="white-space:nowrap">
							<?php echo $entry_select_first_short; ?>:
						</td>
				<?php
					}
				?>
			  
        <td class="left" width="90">
				  
				</td>
			  
			<thead>
		
			
			<tbody id="tbody-related_options">
			
			</tbody>
		  </table>
      
      <a onclick="add_related_option(false);" class="button"><?php echo $entry_add_related_options; ?></a>
      
			</div>
			
			<br><br>
			<span class="help">
				<?php echo $entry_ro_version.": ".$ro_version; ?>
				<br><br>
				<?php echo $text_ro_support; ?>
			</span>

		</div>
			
			<?php } ?>

        <!-- >> opencart@19th19th.ru -->
      
      ]]></add>
		</operation>
    
	</file>
  
	
	
	<file name="/admin/model/sale/order.php">
		<operation>
      <search position="after"><![CDATA[$this->db->query("UPDATE `" . DB_PREFIX . "product` SET quantity = (quantity +]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<

			$this->load->model('module/related_options');
			$this->model_module_related_options->set_ro_quantity_back((int)$product['product_id'], $this->getOrderOptions((int)$order_id, (int)$product['order_product_id']), (int)$product['quantity']);
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
		<operation error="skip">
      <search position="after"><![CDATA[$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = (quantity - " . (int)$order_product['quantity']]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<

			$this->load->model('module/related_options');
			$this->model_module_related_options->set_ro_quantity_back((int)$order_product['product_id'], $order_product['order_option'], -(int)$order_product['quantity'] );
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
	</file>
	
	<file name="/system/library/cart.php">
		<operation>
      <search position="after"><![CDATA[$price = $product_query->row['price'];]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<

			$price = $this->get_related_options_price_by_poids($product_id, $options, $price);
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
		<operation>
      <search position="before"><![CDATA[if ($product_discount_query->num_rows) {]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<

			$product_ro = $this->get_related_options($product_id, $options);
			if ($products_ro && $product_ro && isset($product_ro['relatedoptions_id']) && isset($products_ro[$product_ro['relatedoptions_id']])) {
				$ro_settings = $this->config->get('related_options');
				if (isset($ro_settings['spec_price_discount']) && $ro_settings['spec_price_discount']) {
					$ro_discount_quantity = $products_ro[$product_ro['relatedoptions_id']];
					$product_ro_discount_query = $this->db->query("SELECT price FROM " . DB_PREFIX . "relatedoptions_discount
																													WHERE relatedoptions_id = '" . (int)$product_ro['relatedoptions_id'] . "'
																													AND customer_group_id = '" . (int)$customer_group_id . "'
																													AND quantity <= '" . (int)$ro_discount_quantity . "'
																													ORDER BY quantity DESC, priority ASC, price ASC LIMIT 1");
					if ($product_ro_discount_query->num_rows) {
						$product_discount_query = $product_ro_discount_query;
					}
				}
			}
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
		<operation>
      <search position="after"><![CDATA[public function getProducts() {]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<

			$products_ro = $this->get_products_related_options();
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
		<operation>
      <search position="after"><![CDATA[if ($product_query->num_rows) {]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<

			$products_ro_sm = $this->get_related_options($product_id, $options, 'spec_model');
			if ($products_ro_sm && isset($products_ro_sm['model']) && trim($products_ro_sm['model']!="")) {
				$product_query->row['model'] = $products_ro_sm['model'];
			}
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
		
		<operation>
      <search position="before"><![CDATA[public function getProducts() {]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<
			
			private function get_related_options($product_id, $options, $check_setting='spec_price') {
				global $loader, $registry;
				$loader->model('module/related_options');
				$model = $registry->get('model_module_related_options');
				if (	$model->installed() ) {
					$ro_settings = $this->config->get('related_options');
					if (isset($ro_settings[$check_setting]) && $ro_settings[$check_setting] && count($options) > 0) {
						return $model->get_related_options_set_by_poids($product_id, $options);
					}
				}
				return false;
			}
			
			private function get_related_options_price_by_poids($product_id, $options, $price) {
				$product_ro = $this->get_related_options($product_id, $options);
				if ($product_ro && is_array($product_ro) && isset($product_ro['price']) && $product_ro['price']!=0) {
					return $product_ro['price'];
				}
				return $price;
			}
			
			private function get_products_related_options() {
				
				$products_ro = array();
				if (!$this->data) {
					foreach ($this->session->data['cart'] as $key => $quantity) {
						$product = explode(':', $key);
						$product_id = $product[0];
						$stock = true;
			
						// Options
						if (isset($product[1])) {
							$options = unserialize(base64_decode($product[1]));
						} else {
							$options = array();
						}
						
						$product_ro = $this->get_related_options($product_id, $options); 
						if ($product_ro && is_array($product_ro) && isset($product_ro['relatedoptions_id'])) {
							if (!isset($products_ro[$product_ro['relatedoptions_id']])) {
								$products_ro[$product_ro['relatedoptions_id']] = 0;
							}
							$products_ro[$product_ro['relatedoptions_id']] += $quantity;
						}
						
					}
				}	
				return $products_ro;
			}
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
	</file>
	
	<!-- фильтр частично дублируется со стандартным (в некоторых версиях oc), зато так универсальнее -->
	<file name="/catalog/model/catalog/product.php">
		<operation error="skip">
			<search position="before"><![CDATA[$words = explode(' ', trim(preg_replace('/\s\s+/', ' ', $data['filter_name'])));]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<
			$sql .= " LCASE(p.model) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";
			$sql .= " OR p.product_id IN ( SELECT product_id FROM ".DB_PREFIX."relatedoptions 
					WHERE  LCASE(model) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "' ) OR ";
			// >> opencart@19th19th.ru]]></add>
		</operation>
	</file>
	
	<!-- опять дубляж - все для совместимости -->
	<file name="/catalog/model/catalog/product.php">
		<operation error="skip">
			<search position="after"><![CDATA[$sql .= " OR LCASE(p.model) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<
			$sql .= " OR p.product_id IN ( SELECT product_id FROM ".DB_PREFIX."relatedoptions 
					WHERE  LCASE(model) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "' ) ";
			// >> opencart@19th19th.ru]]></add>
		</operation>
	</file>
	
	
  <file name="/catalog/model/checkout/order.php">
		<operation>
      <search position="after"><![CDATA[$order_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$order_product['order_product_id'] . "'");]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<
			
				$this->load->model('module/related_options');
				$this->model_module_related_options->update_related_options_quantity_by_order((int)$order_product['product_id'], (int)$order_product['quantity'], $order_option_query->rows);
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
		<operation>
      <search position="after"><![CDATA[$order_product_id = $this->db->getLastId();]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<
			
				$this->load->model('module/related_options');
				if ($this->model_module_related_options->installed()) {
					$ro_settings = $this->config->get('related_options');
						if (isset($ro_settings['spec_model']) && $ro_settings['spec_model']) {
							$ro_options = array();
							foreach ($product['option'] as $option) {
								if (isset($option['product_option_value_id'])) {
									$ro_options[$option['product_option_id']] = $option['product_option_value_id'];
								}
							}
							$product_ro = $this->model_module_related_options->get_related_options_set_by_poids($product['product_id'], $ro_options);
							if ($product_ro && isset($product_ro['model'])) {
								if (trim($product_ro['model']) != "") {
									$this->db->query("UPDATE " . DB_PREFIX . "order_product SET model='".$this->db->escape($product_ro['model'])."' WHERE order_product_id = " . (int)$order_product_id . "");
								}
							}
						}
				}
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
		
	</file>
	
  
  
  <file name="catalog/view/theme/*/template/product/product.tpl">
		
		<operation>
      <search position="after" offset="1"><![CDATA[<div class="options"]]></search>
			<add><![CDATA[<!-- opencart@19th19th.ru << -->
				<?php
					$this->load->model('module/related_options');
					if (	$this->model_module_related_options->installed() ) {
						$ro_settings = $this->config->get('related_options');
						if (isset($ro_settings['show_clear_options']) && $ro_settings['show_clear_options']) {
							if ((int)$ro_settings['show_clear_options'] == 1) {
				?>
				
				<script type="text/javascript">
				$(document).ready(function(){
					$('div[class=options]').find("h2").after('<a onclick="clear_options();"><?php echo $text_ro_clear_options; ?></a><br>');
				});
				</script>	
				<?php
				
							} else {
				
				?>
				<script type="text/javascript">
				$(document).ready(function(){
					$('div[class=options]').append('<a onclick="clear_options();"><?php echo $text_ro_clear_options; ?></a><br>');
				});
				</script>	
				<?php
							}
						}
					}
				?>
			
			<!-- >> opencart@19th19th.ru -->]]></add>
		</operation>
		
		
		<operation>
      <search position="after"><![CDATA[$('#button-cart').bind('click', function() {]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<
	<?php
		$this->load->model('module/related_options');
		$need_to_replace = FALSE;
		if ( $this->model_module_related_options->installed() ) {
			$ro_settings = $this->config->get('related_options');
			if (isset($ro_settings['stock_control']) && $ro_settings['stock_control'] && $this->model_module_related_options->get_product_related_options_use($product_id)) {
			$need_to_replace = TRUE;
			}
		}
		if ($need_to_replace) {
	?>
	
		if (!$('#button-cart').attr('allow_add_to_cart')) {
			stock_control(1);
			return;
		}
		$('#button-cart').attr('allow_add_to_cart','');
		
	<?php
		} else {
	?>
	
		
	<?php
		}
	?>
			
// >> opencart@19th19th.ru ]]></add>
		</operation>
		
		<!-- for autocalc_price_option_v2.0.14.xml -->
		<operation error="skip">
			<search position="after"><![CDATA[var main_price]]></search>
			<add><![CDATA[// opencart@19th19th.ru <<
				
				
				<?php
				$this->load->model('module/related_options');
				if ($this->model_module_related_options->installed()) {
					$ro_settings = $this->config->get('related_options');
						if (isset($ro_settings['spec_price']) && $ro_settings['spec_price']) {
						?>
						
							main_price = get_main_price(main_price);
							
						<?php
						}
				}
				?>
			
			// >> opencart@19th19th.ru]]></add>
		</operation>
    
    <operation error="log">
			
			<search position="after"><![CDATA[<?php echo $content_bottom; ?>]]></search>
			<!--<search position="after"><![CDATA[<?php echo $content_bottom; ?></div>]]></search>-->
			<!-- 
      <search position="before"><![CDATA[<?php echo $footer; ?>]]></search>
			-->
			<add><![CDATA[<!-- opencart@19th19th.ru << -->

			<script type="text/javascript">
				function clear_options() {
					options = $("input[type=radio][name^=option]:checked");
					for (i=0;i<options.length;i++) {
						options[i].checked = false;
					}
					options = $("select[name^=option]");
					for (i=0;i<options.length;i++) {
						options[i].value = '';
					}
					options = $("textarea[name^=option]");
					for (i=0;i<options.length;i++) {
						options[i].value = '';
					}
					options = $("input[type=text][name^=option]");
					for (i=0;i<options.length;i++) {
						options[i].value = '';
					}
					options = $("input[type=checkbox][name^=option]:checked");
					for (i=0;i<options.length;i++) {
						options[i].checked = false;
					}
					options = $("input[type=hidden][name^=option]");
					for (i=0;i<options.length;i++) {
						options[i].value = '';
					}
					
					options_values_access();
				}
			</script>
			
			<?php 
			$this->load->model('module/related_options');
			if (	$this->model_module_related_options->installed() ) {
			
				if (isset($ro_array)) {
					
					?>
					<script type="text/javascript">
					
					var hide_inaccessible = <?php if (isset($ro_settings['hide_inaccessible']) && $ro_settings['hide_inaccessible']) echo "true"; else echo "false"; ?>;
					var options_types = [];
					var variant_product_options = [];
					var ro_step_by_step = <?php if (isset($ro_settings['step_by_step']) && $ro_settings['step_by_step']) echo "true"; else echo "false"; ?>;
					
					<?php
					
					if (isset($options) && is_array($options)) {
						foreach ($options as $option) {
							echo "options_types[".$option['product_option_id']."]='".$option['type']."';\n";
						}
					}
					if (isset($variant_product_options) && is_array($variant_product_options)) {
						foreach ($variant_product_options as $product_option_id) {
							echo "variant_product_options.push(".$product_option_id.");\n";
						}
					}
					
					if (isset($_GET['filter_name'])) {
						echo "var filter_name=\"".$_GET['filter_name']."\";";
					} elseif (isset($_GET['search'])) {
						echo "var filter_name=\"".$_GET['search']."\";";
					} else {
						echo "var filter_name = false;";
					}
					
					if ( count($ro_array) == 0) {
					
						echo "var ro_array = false;";
					
					} else {
					
						echo "var ro_array = {};";
					
						foreach ($ro_array as $relatedoptions_id => $relatedoptions_options) {
							echo "ro_array[".$relatedoptions_id."] = {};\n";
							foreach ($relatedoptions_options as $product_option_id => $product_option_value_id ) {
								echo "ro_array[".$relatedoptions_id."][".$product_option_id."] = ".$product_option_value_id.";\n";
							}
						}
					}
					
					if ((isset($ro_settings['spec_price']) && $ro_settings['spec_price']) || (isset($ro_settings['spec_model']) && $ro_settings['spec_model'])) {
						echo "ro_prices = {};\n";
					} else {
						echo "ro_prices = false;\n";	
					}
					
					
					
					if (isset($ro_settings['spec_price']) && $ro_settings['spec_price'] && isset($ro_prices) && is_array($ro_prices)) {
						
						foreach ($ro_prices as $relatedoptions_id => $ro_price) {
							echo "ro_prices[".$relatedoptions_id."] = {};\n";
							echo "ro_prices[".$relatedoptions_id."]['price'] = ".$ro_price['price'].";\n";
							if (isset($ro_price['discounts']) && is_array($ro_price['discounts']) ) {
								echo "ro_prices[".$relatedoptions_id."]['discounts'] = [];\n";
								foreach ($ro_price['discounts'] as $ro_discount)	{
									echo "ro_prices[".$relatedoptions_id."]['discounts'].push({quantity: ".$ro_discount['quantity'].", price: ".$ro_discount['price']."});\n";
								}
							} else {
								echo "ro_prices[".$relatedoptions_id."]['discounts'] = false;\n";
							}
						}
					
					}
					
					if (isset($ro_settings['spec_model']) && $ro_settings['spec_model'] && isset($ro_prices) && is_array($ro_prices)) {
						foreach ($ro_prices as $relatedoptions_id => $ro_price) {
							if (!isset($ro_settings['spec_price']) || !$ro_settings['spec_price']) {
							// Не было цен, инициализируем объект
								echo "ro_prices[".$relatedoptions_id."] = {};\n";
							}
							echo "ro_prices[".$relatedoptions_id."]['model'] = \"".$ro_price['model']."\";\n";
						}
					}
					
					if (isset($ro_default)) {
						if ($ro_default === FALSE) {
							echo "var ro_default = false;\n";
						} else {
							echo "var ro_default = ".(int)$ro_default.";\n";
						}
					}
					
					?>
					
					var all_select_ov = {};
					$("select[name^=option\\[]").each( function (si, sel_elem) {
						all_select_ov[sel_elem.name] = [];
						
						$.each(sel_elem.options, function (oi, op_elem) {
							all_select_ov[sel_elem.name].push(op_elem.value);
						});
						
					} );
					
						
					
					
					(function ($) {
						$.fn.toggleOption = function (value, show) {
							/// <summary>Show or hide the desired option</summary>
							return this.filter('select').each(function () {
								var select = $(this);
								if (typeof show === 'undefined') {
									show = select.find('option[value="' + value + '"]').length == 0;
								}
								if (show) {
									select.showOption(value);
								}
								else {
									select.hideOption(value);
								}
							});
						};
						$.fn.showOption = function (value) {
							/// <summary>Show the desired option in the location it was in when hideOption was first used</summary>
							return this.filter('select').each(function () {
								var select = $(this);
								var found = select.find('option[value="' + value + '"]').length != 0;
								if (found) return; // already there
					
								var info = select.data('opt' + value);
								if (!info) return; // abort... hideOption has not been used yet
					
								var targetIndex = info.data('i');
								var options = select.find('option');
								var lastIndex = options.length - 1;
								if (lastIndex == -1) {
									select.prepend(info);
								}
								else {
									options.each(function (i, e) {
										var opt = $(e);
										if (opt.data('i') > targetIndex) {
											opt.before(info);
											return false;
										}
										else if (i == lastIndex) {
											opt.after(info);
											return false;
										}
									});
								}
								return;
							});
						};
						$.fn.hideOption = function (value) {
							/// <summary>Hide the desired option, but remember where it was to be able to put it back where it was</summary>
							return this.filter('select').each(function () {
								var select = $(this);
								var opt = select.find('option[value="' + value + '"]').eq(0);
								if (!opt.length) return;
					
								if (!select.data('optionsModified')) {
									// remember the order
									select.find('option').each(function (i, e) {
										$(e).data('i', i);
									});
									select.data('optionsModified', true);
								}
					
								select.data('opt' + value, opt.detach());
								return;
							});
						};
					})(jQuery);					
					
					function get_main_price(main_price) {
					
						if (ro_prices) {
							ro_id = get_current_ro_id(get_options_values([]));
							if (ro_id != -1 && (ro_id in ro_prices)) {
								if (ro_prices[ro_id]['price'] != 0) {
									return ro_prices[ro_id]['price'];
								}
							}
						}
						return main_price;
					}
					
					function stock_control(add_to_cart) {
					
						<?php  if (!isset($ro_settings['stock_control']) || !$ro_settings['stock_control']) { ?>
						if (add_to_cart) {
							$('#button-cart').attr('allow_add_to_cart','allow_add_to_cart');
							$('#button-cart').click();
						}
						return;
						<?php } ?>
					
						var erros_msg = '<?php echo $entry_stock_control_error; ?>';
						
						var options_values = get_options_values([]);
						var roid = get_current_ro_id(options_values);
						
						$('.success, .warning').remove();
						
						if (roid!=-1) {
						
							$.ajax({
									url: '<?php echo HTTP_SERVER; ?>index.php?route=module/related_options/get_to_free_quantity&roid='+roid,
									dataType : "text",                     // тип загружаемых данных
									success: function (data) { // вешаем свой обработчик на функцию success
										
										if (parseInt(data) < parseInt( $('input[type=text][name=quantity]').val() )) {
											$('.success, .warning').remove();
											$('div[class=cart]').after('<div class="warning">'+erros_msg.replace('%s',parseInt(data))+'</div>');
											
										} else {
																					
											if (add_to_cart) {
												$('#button-cart').attr('allow_add_to_cart','allow_add_to_cart');
												$('#button-cart').click();
											}
										}
									} 
							});
						} else { // не определили связанную опцию - пусть срабатывает стандартный алгоритм	
							if (add_to_cart) {
								$('#button-cart').attr('allow_add_to_cart','allow_add_to_cart');
								$('#button-cart').click();
							}
						
						}
						
						
						
						
					}
					
					function get_current_ro_id(options_values) {
						var all_ok;
						for(var ro_key in ro_array) {
							all_ok = true;
							for(var ov_key in ro_array[ro_key]) {
								if (!(ov_key in options_values && options_values[ov_key]==ro_array[ro_key][ov_key])) {
									all_ok = false;
								}
							}
							if (all_ok) return ro_key; 
						}
						return -1;
					}
					
					
					function option_values_access(options_values, option_id) {
						
						
						accessible_values = [];
						
						for(var ro_key in ro_array) {
							
							all_ok = true;
							for(var ov_key in options_values) {
								if (ov_key != option_id) {
									if (options_values[ov_key]) {
										if (ro_array[ro_key][ov_key] != options_values[ov_key]) {
											all_ok = false;
										}
									}
								}
							}
							
							if (all_ok &&  ($.inArray(ro_array[ro_key][option_id], accessible_values) == -1 )) accessible_values.push(ro_array[ro_key][option_id]);
							
						}
						
						set_accessible_values(option_id, accessible_values);
						
					}
					
					function set_accessible_values(option_id, accessible_values) {
					
						var current_value = ($('input[type=radio][name=option\\['+option_id+'\\]]:checked').val() || $('select[name=option\\['+option_id+'\\]]').val());
					
						if (options_types[option_id] == 'select') {
						
							if (current_value && $.inArray(parseInt(current_value), accessible_values)==-1) {
								$("select[name=option\\["+option_id+"\\]]").val("");
							}
							
							if (hide_inaccessible) {
							
								select_options = all_select_ov["option["+option_id+"]"];
								for (var i=0;i<select_options.length;i++) {
									if (select_options[i]) {
										option_value_disabled = ($.inArray(parseInt(select_options[i]),accessible_values) == -1);
										$("select[name=option\\["+option_id+"\\]]").toggleOption(parseInt(select_options[i]), !option_value_disabled);
									}
								}
								
							} else {
							
								select_options = $("select[name=option\\["+option_id+"\\]]")[0].options;
								for (var i=0;i<select_options.length;i++) {
									if (select_options[i].value) {
										option_value_disabled = ($.inArray(parseInt(select_options[i].value),accessible_values) == -1);
										select_options[i].disabled = option_value_disabled;
									}
								}
								
							}
							
						} else if (options_types[option_id] == 'radio' || options_types[option_id] == 'image') {	
							
							if (current_value && $.inArray(parseInt(current_value), accessible_values)==-1) {
								$("input[type=radio][name=option\\["+option_id+"\\]]:checked")[0].checked=false;
							}
							
							radio_options = $("input[type=radio][name=option\\["+option_id+"\\]]");
							for (var i=0;i<radio_options.length;i++) {
								option_value_disabled = ($.inArray(parseInt(radio_options[i].value),accessible_values) == -1);
								if (hide_inaccessible) {
									$("#option-value-"+radio_options[i].value+"").toggle(!option_value_disabled);
									//radio_options[i].hidden = option_value_disabled;
									$("label[for=option-value-"+radio_options[i].value+"]").toggle(!option_value_disabled);
								} else {
									radio_options[i].disabled = option_value_disabled;
								}
							}
							
							
							
						}
					
					}
					
					function get_options_values(options_keys) {
						var options_values = {};
						
						for (var i=0;i<$("select[name^=option]").length;i++) {
						
							option_id = parseInt( $("select[name^=option]")[i].name.substr(7,$("select[name^=option]")[i].name.length-8) );
							if ($.inArray(option_id,variant_product_options) != -1) {
								options_values[option_id] = $("select[name^=option]")[i].value;
								options_keys.push(option_id);
							}
						}
						
						// сначала все радио
						for (var i=0;i<$("input[type=radio][name^=option]").length;i++) {
						
							option_id = parseInt( $("input[type=radio][name^=option]")[i].name.substr(7,$("input[type=radio][name^=option]")[i].name.length-8) );
							if ($.inArray(option_id,variant_product_options) != -1) {
								options_values[option_id] = 0;
								if ($.inArray(option_id,options_keys) == -1) {
									options_keys.push(option_id);
								}
							}
						}
						
						// затем только выбранные
						for (var i=0;i<$("input[type=radio][name^=option]:checked").length;i++) {
							option_id = parseInt( $("input[type=radio][name^=option]:checked")[i].name.substr(7,$("input[type=radio][name^=option]:checked")[i].name.length-8) );
							if ($.inArray(option_id,variant_product_options) != -1) {
								options_values[option_id] = $("input[type=radio][name^=option]:checked")[i].value;
							}
						}
						
						return options_values;
					}
					
					// автовыбор корректных начальных значений опций, если уже выбраны какие-то значения
					function use_first_values(set_anyway) {
						
						var options_values = get_options_values([]);
						
						var has_selected = false;
						for (var optkey in options_values) {
							if (options_values[optkey]) {
								has_selected = true;
								break;
							}
						}
						
						if ((has_selected || set_anyway) && ro_array && Object.keys(ro_array).length > 0) {
							ro_key = Object.keys(ro_array)[0];
							setSelectedRO(ro_key);
						}
						
					}
					
					function setSelectedRO(ro_key) {
					
						if (ro_array && ro_array[ro_key]) {
							
							var last_opt_id = "";
							for (var opt_id in ro_array[ro_key]) {
								
								if ($('select[name=option\\['+opt_id+'\\]]').length > 0) {
									$('[name=option\\['+opt_id+'\\]]').val(ro_array[ro_key][opt_id]);
								} else if ($('input[type=radio][name=option\\['+opt_id+'\\]]').length > 0) {
									$('input[type=radio][name=option\\['+opt_id+'\\]][value='+ro_array[ro_key][opt_id]+']').prop('checked', true);
								}
								
								last_opt_id = opt_id;
							
							}
							
							if (last_opt_id != "") {
								if ($('select[name=option\\['+last_opt_id+'\\]]').length > 0) {
									$('[name=option\\['+last_opt_id+'\\]]').change();
								} else if ($('input[type=radio][name=option\\['+last_opt_id+'\\]]').length > 0) {
									$('input[type=radio][name=option\\['+last_opt_id+'\\]][value='+ro_array[ro_key][last_opt_id]+']').change();
								}
							}
							
						}
					}
					
					
					// для пошагового варианта
					function get_options_steps() {
						var options_steps = [];
						var product_option_id = "";
						
						for (var i=0;i<$('[name^=option\\[]').length;i++) {
						
							product_option_id = $('[name^=option\\[]')[i].name.substr(7, $('[name^=option\\[]')[i].name.length-8);
							if (!isNaN(product_option_id)) product_option_id = parseInt(product_option_id);
							if ($.inArray(product_option_id, variant_product_options) != -1) {
								if ($.inArray(product_option_id, options_steps) == -1) {
									options_steps.push(product_option_id);
								}
							}
						}
						
						return options_steps;
					}
					
					function options_values_access() {
						
						if (!ro_array) return;
						
						if (ro_step_by_step) {
						
							var options_steps = get_options_steps();
							var prev_options_values = {};
							var prev_options = [];
							
							for (var i=0;i<options_steps.length;i++) {
								if (i>0) {
									if (prev_options[i-1]) {
										// ограничения по предыдущим
										option_values_access(prev_options_values, options_steps[i]);
										
									} else {
										// откл все
										set_accessible_values(options_steps[i], []);
									}
								}
								prev_options.push( ($('input[type=radio][name=option\\['+options_steps[i]+'\\]]:checked').val() || $('select[name=option\\['+options_steps[i]+'\\]]').val()) );
								prev_options_values[options_steps[i]] = prev_options[prev_options.length-1];
							}
						
						} else {
						
							var options_keys = [];
							var options_values = get_options_values(options_keys);
							for (var i=0;i<options_keys.length;i++) {
								option_values_access(options_values, options_keys[i]);
							}
							
						}
						
						stock_control(0);
						
						<?php
						if (isset($ro_settings['spec_model']) && $ro_settings['spec_model']) {
						?>
						set_model();
						<?php
						}
						?>
						
					}
					
					function set_model() {
						
						var options_values = get_options_values([]);
						var roid = get_current_ro_id(options_values);
						
						if (roid!=-1 && ro_prices[roid]['model']!='') {
							$('#product_model').html(ro_prices[roid]['model']);
							
						} else {
							$('#product_model').html("<?php echo $model; ?>");
						}
					}
					
					
					function setRObyModel(model) {
						if (model && ro_array && ro_prices) {
						
							for (var ro_key in ro_prices) {
							
								if (ro_prices[ro_key]['model'] && ro_prices[ro_key]['model'] != '') {
									if (model.toLowerCase() == ro_prices[ro_key]['model'].toLowerCase()) {
										setSelectedRO(ro_key);
										return true;
									}
								}
							}
						}
						return false;
					}
					
					
					
					$("select[name^=option]").each(function (i) {
						$(this).change(function(){
							options_values_access();
						})
					})
					
					$("input[type=radio][name^=option]").each(function (i) {
						$(this).change(function(){
							options_values_access();
						})
					})
					
					$("input[type=text][name=quantity]").each(function (i) {
						$(this).change(function(){
							stock_control(0);
						})
					})
					
					// если задан фильтр и он совпадает с моделью из связанных опций - должно быть выбрано именно это сочетание
					if (!setRObyModel(filter_name)) { // нет по фильтру, или нет самого фильтра, тогда...
						// если при открытии выбрана опция - надо перевыбрать доступное сочетание
						if (ro_default !== false) {
							setSelectedRO(ro_default);
						}
					}
					
					
					
					options_values_access();
					
					
					</script>
					<?php
					
				}
			
			?>
			

			
			<?php } ?>

<!-- >> opencart@19th19th.ru -->]]></add>
		</operation>
		
<!-- <?php	/* opencart@19th19th.ru */	echo "<font id='product_model'>".$model."</font>"; /* >> opencart@19th19th.ru */ ?> -->		
		
		<operation error="log">
			<!--<search position="ireplace" ><![CDATA[<?php echo $model; ?>]]></search>-->
			<search position="replace" ><![CDATA[<?php echo $model; ?>]]></search>
			<add><![CDATA[<?php	/* opencart@19th19th.ru */	echo "<font id='product_model'>".$model."</font>"; /* >> opencart@19th19th.ru */ ?>]]>
      </add>
		</operation>
		
		<operation error="skip">
			<search position="after" offset="1"><![CDATA[function process_discounts(price, quantity)]]></search>
			<add><![CDATA[
      // opencart@19th19th.ru <<
					<?php
					$this->load->model('module/related_options');
						$ro_model = "";
						if ( $this->model_module_related_options->installed() ) {
							$ro_settings = $this->config->get('related_options');
							if (isset($ro_settings['spec_price']) && $ro_settings['spec_price'] && isset($ro_settings['spec_price_discount']) && $ro_settings['spec_price_discount']) {
					?>
					
						var options_values = get_options_values([]);
						var roid = get_current_ro_id(options_values);
						
						if (ro_prices[roid]['discounts'].length > 0) {
						
							for (var disc_cnt = 0; disc_cnt < ro_prices[roid]['discounts'].length; disc_cnt++ ) {
								disc_array = ro_prices[roid]['discounts'][disc_cnt];
								if (disc_array['price'] > 0 && quantity >= disc_array['quantity'] && disc_array['price'] < price) {
									price = disc_array['price'];
								}
							}
							
							return price;
						}
						
					<?php
							}
						}
					?>
					
			// >> opencart@19th19th.ru]]>
      </add>
		</operation>
		
	</file>
  
	<file name="/catalog/controller/checkout/cart.php">
    
    <operation error="log">
			<search position="after"><![CDATA[$products = $this->cart->getProducts();]]></search>
			<add><![CDATA[
      // opencart@19th19th.ru <<
					
					if (!$this->config->get('config_stock_checkout') || $this->config->get('config_stock_warning')) {
						$this->load->model('module/related_options');
						if ( $this->model_module_related_options->installed() ) {
							$products = $this->model_module_related_options->cart_ckeckout_stock($products);
							foreach ($products as $product) {
								if (!$product['stock']) {
									$this->data['error_warning'] = $this->language->get('error_stock');
									break;
								}
							}
						}
					}
					
			// >> opencart@19th19th.ru]]>
      </add>
		</operation>
		
		<operation error="log">
			<search position="before"><![CDATA[$this->data['products'][] = array(]]></search>
			<add><![CDATA[
      // opencart@19th19th.ru <<
					
						$this->load->model('module/related_options');
						$ro_model = "";
						if ( $this->model_module_related_options->installed() ) {
							$ro_settings = $this->config->get('related_options');
							if (isset($ro_settings['spec_model']) && $ro_settings['spec_model']) {
								$ro_options = array();
								foreach ($product['option'] as $option) {
									if (isset($option['product_option_value_id'])) {
										$ro_options[$option['product_option_id']] = $option['product_option_value_id'];
									}
								}
								$product_ro = $this->model_module_related_options->get_related_options_set_by_poids($product['product_id'], $ro_options);
								if ($product_ro && isset($product_ro['model'])) {
									$ro_model = $product_ro['model'];
								}
							}
						}	
					//}
			// >> opencart@19th19th.ru]]>
      </add>
		</operation>
		
		<operation error="log">
			<search position="replace"><![CDATA[=> $product['model'],]]></search>
			<add><![CDATA[
      // opencart@19th19th.ru <<
					=> (isset($ro_model) && $ro_model!="")?($ro_model):($product['model']),
			// >> opencart@19th19th.ru]]>
      </add>
		</operation>
		
	</file>
	
	
	
	<file name="/catalog/controller/product/ajaxoptions.php" error="skip">
    
		<operation error="skip">
			<search position="after"><![CDATA[public function index() {]]></search>
			<add><![CDATA[
				// opencart@19th19th.ru <<
				$this->use_cache = FALSE;
				// >> opencart@19th19th.ru]]>
			</add>
		</operation>	
		
    <operation error="skip">
			<search position="before"><![CDATA[if ((float)$product_info['special']) {]]></search>
			<add><![CDATA[
				// opencart@19th19th.ru <<
				$this->load->model('module/related_options');
				if ( $this->model_module_related_options->installed() && isset($this->request->post['option']) && is_array($this->request->post['option']) ) {
					$ro_settings = $this->config->get('related_options');
					if (isset($ro_settings['spec_price']) && $ro_settings['spec_price'] && count($this->request->post['option']) > 0) {
						$product_ro = $this->model_module_related_options->get_related_options_set_by_poids($product_id, $this->request->post['option']);
						if ($product_ro && is_array($product_ro) && isset($product_ro['price']) && $product_ro['price']!=0) {
							$this->data['price'] = $product_ro['price'];
						}
					}	
				}
				// >> opencart@19th19th.ru]]>
      </add>
		</operation>
	</file>
  

</modification>